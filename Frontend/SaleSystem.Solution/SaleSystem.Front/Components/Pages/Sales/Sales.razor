@page "/sales"

@rendermode InteractiveServer

@inject ISaleService SaleService
@inject ISaleMappers SaleMappers
@inject NavigationManager NavigationManager

<h3 class="text-2xl font-semibold mb-4">Lista de Ventas</h3>

<NavLink href="/sales/create" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-1 px-2 rounded">
    Crear Venta
</NavLink>
@if (saleResponseDTO is null)
{
    <p>Cargando ventas...</p>
}
else if (!saleResponseDTO.Any())
{
    <p>No hay ventas disponibles.</p>
}
else
{
    <div class="overflow-x-auto">
        <table class="min-w-full bg-white border border-gray-200">
            <thead>
                <tr>
                    <th class="py-2 px-4 border-b">ID de Venta</th>
                    <th class="py-2 px-4 border-b">IdCliente</th>
                    <th class="py-2 px-4 border-b">Fecha</th>
                    <th class="py-2 px-4 border-b">Total</th>
                    <th class="py-2 px-4 border-b">Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var sale in saleResponseDTO)
                {
                    <tr>
                        <td class="py-2 px-4 border-b">@sale.Id</td>
                        <td class="py-2 px-4 border-b">@sale.ClientId</td>
                        <td class="py-2 px-4 border-b">@sale.Date.ToString("dd/MM/yyyy")</td>
                        <td class="py-2 px-4 border-b">@sale.Total.ToString("C")</td>
                        <td class="py-2 px-4 border-b">

                            <button class="bg-green-500 hover:bg-green-700 text-white font-bold py-1 px-2 rounded"
                                    @onclick="() => ShowSaleDetails(sale.Id)">
                                Ver Detalles
                            </button>

                            <a href="/sales/update/@sale.Id">Update</a>

                            <button class="bg-red-500 hover:bg-red-700 text-white font-bold py-1 px-2 rounded"
                                    @onclick="() => DeleteAsync(sale.Id)">
                                Eliminar
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@code {
    private List<SaleResponseDTO> saleResponseDTO = new();

    protected override async Task OnInitializedAsync()
    {
        await LoadSales();
    }

    private async Task LoadSales()
    {
        try
        {
            saleResponseDTO = await SaleService.GetSales();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error al cargar las ventas: {ex.Message}");
        }
    }

    private void ShowSaleDetails(int saleId)
    {
        NavigationManager.NavigateTo($"/sales/details/{saleId}");
    }

    private async void DeleteAsync(int id)
    {
        await SaleService.DeleteSale(id);

        await LoadSales();
    }
}
