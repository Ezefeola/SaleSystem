@page "/client/create"


@inject IClientService ClientService
@inject NavigationManager Navigation

<h3>CreateClient</h3>

<EditForm Model="clientRequestDTO" OnValidSubmit="CreateClientMethod" FormName="CreateClientForm" method="post">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-4">
        <label for="clientName" class="block">Nombre</label>
        <InputText id="clientName" class="input" @bind-Value="clientRequestDTO.Client" />
    </div>

    <div class="mb-4">
        <label for="phoneNumber" class="block">Teléfono</label>
        <InputText id="phoneNumber" class="input" @bind-Value="clientRequestDTO.PhoneNumber" />
    </div>

    <div class="mb-4">
        <label for="emailAddress" class="block">Email</label>
        <InputText id="emailAddress" class="input" @bind-Value="clientRequestDTO.EmailAddress" />
    </div>

    <button type="submit" class="btn btn-primary">Crear</button>

    <button @onclick="Cancel" class="btn btn-secondary">Cancelar</button>
</EditForm>

@code {
    [SupplyParameterFromForm]
    public ClientRequestDTO clientRequestDTO { get; set; } = new ClientRequestDTO();

    private async Task CreateClientMethod()
    {
        try
        {
            await ClientService.CreateClient(clientRequestDTO);
            Navigation.NavigateTo("/clients");
        }
        catch (HttpRequestException ex)
        {
            // Handle the error
            Console.WriteLine($"An error occurred: {ex.Message}");
        }
    }

    private void Cancel()
    {
        Navigation.NavigateTo("/Clients");
    }
}
